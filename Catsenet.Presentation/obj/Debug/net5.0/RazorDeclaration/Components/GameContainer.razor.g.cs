// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Catsenet.Presentation.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Catsenet.Presentation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Catsenet.Presentation.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Catsenet.Presentation.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\_Imports.razor"
using Catsenet.Presentation.Models;

#line default
#line hidden
#nullable disable
    public partial class GameContainer : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 22 "C:\Proyectos\Personales\BlazorApps\Catsenet\Catsenet\Catsenet.Presentation\Components\GameContainer.razor"
       

    static GameManager _gameManager;
    static GameManager _gameManager2;
    static AccesorioModel accesorio;
    static bool click = false;
    static bool ganaPierde = false;
    static bool trampa = false;
    static string resultado = "";
    static int count=0;
    static GameManager _jugador;
    protected override void OnInitialized()
    {
        _gameManager = new GameManager();
        _gameManager.MainLoopCompleted += (o, e) => StateHasChanged();
        _gameManager2 = new GameManager();
        _gameManager2.BubbleModelManager.visibilidad = false;
        _gameManager2.MainLoopCompleted += (o, e) => StateHasChanged();
        accesorio = new AccesorioModel();
        _jugador = _gameManager;
        accesorio.visibilidad = false;
    }

    async Task ClickEvent()
    {
        if (click)
            return;
        click = true;
        if (ganaPierde)
            await Reiniciar();
        await Iniciar();
        click = false;
    }

    public async Task Iniciar()
    {
        if (ganaPierde)
            return;
        await _gameManager.VisibilidadBubble(true, "dado-gira");
        await _gameManager.Avanzar();
        await ValidarTrampas(_gameManager, _gameManager2, true);
        _gameManager.BubbleModelManager.visibilidad = false;
        await _gameManager.VisibilidadBubble(false, "");
        if (ganaPierde)
            return;
        await _gameManager.VisibilidadBubble(false, "");
        await _gameManager2.Avanzar();
        await ValidarTrampas(_gameManager2, _gameManager, false);
        await _gameManager.VisibilidadBubble(true, "dado-gira");
        await Iniciar();
    }

    public async Task ValidarTrampas(GameManager player1, GameManager player2, bool _ganaPierde)
    {
        if (!_jugador.Equals(player1))
        {
            _jugador = player1;
            count = 0;
        }
        accesorio.visibilidad = false;
        if (_ganaPierde)
        {
            if (player1.Personaje.horizontal <=72 && player1.Personaje.vertical >= 84)
            {
                await player1.Gana();
                await player2.Muere();
                resultado = "gana";
                ganaPierde = true;
                return;
            }

        }
        else
        {
            if (player1.Personaje.horizontal <= 72 && player1.Personaje.vertical >= 84)
            {
                await player1.Gana();
                await player2.Muere();
                resultado = "pierde";
                ganaPierde = true;
                return;
            }
        }
        if (player1.Personaje.horizontal == 24 && player1.Personaje.vertical == 71 ||
    player1.Personaje.horizontal == 72 && player1.Personaje.vertical == 32
    )
        {
            count++;
            await ObtenerCombo(player1, count);
            await player2.Muere();
            await TiempoAccesorio(player2);
        }

        if (
player1.Personaje.horizontal == 24 && player1.Personaje.vertical == 19 ||
player1.Personaje.horizontal == 24 && player1.Personaje.vertical == 45 ||
player1.Personaje.horizontal == 72 && player1.Personaje.vertical == 6 ||
player1.Personaje.horizontal == 72 && player1.Personaje.vertical == 58 ||
player1.Personaje.horizontal == 72 && player1.Personaje.vertical == 71
)
        {
            count++;
            await ObtenerCombo(player1, count);
            await player1.Avanzar();
            await ValidarTrampas(player1, player2, _ganaPierde);
        }
        if (
player1.Personaje.horizontal == 56 && player1.Personaje.vertical == 19 ||
player1.Personaje.horizontal == 56 && player1.Personaje.vertical == 45 ||
player1.Personaje.horizontal == 56 && player1.Personaje.vertical == 71 ||
player1.Personaje.vertical == 32 && player1.Personaje.horizontal == 8 ||
player1.Personaje.vertical == 58 && player1.Personaje.horizontal == 8 ||
player1.Personaje.vertical == 84 && player1.Personaje.horizontal == 8
)
        {
            count++;
            await player1.Muere();
            await TiempoAccesorio(player1);
        }
        await player1.EstadoCombo(false, "");
    }

    public async Task Reiniciar()
    {
        click = true;
        ganaPierde = false;
        trampa = false;
        resultado = "";
        accesorio.visibilidad=false;
        _gameManager = new GameManager();
        _gameManager.MainLoopCompleted += (o, e) => StateHasChanged();
        _gameManager2 = new GameManager();
        _gameManager2.BubbleModelManager.visibilidad = false;
        _gameManager2.MainLoopCompleted += (o, e) => StateHasChanged();
    }

    public async Task ObtenerCombo(GameManager _jugador, int numero)
    {
        switch (numero)
        {
            case 2:
                await _jugador.EstadoCombo(true, "!COMBO X2!");
                break;
            case 3:
                await _jugador.EstadoCombo(true, "!MÍTICO! X3");
                break;
            case 4:
                await _jugador.EstadoCombo(true, "!ÉPICO X4");
                break;
            case 5:
                await _jugador.EstadoCombo(true, "!DIOS RA! X5");
                break;
        }
    }

    public async Task TiempoAccesorio(GameManager player)
    {
        accesorio.visibilidad = true;
        accesorio.horizontal = player.Personaje.horizontal;
        accesorio.vertical = player.Personaje.vertical;
    }



#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
